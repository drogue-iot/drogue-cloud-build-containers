name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '42 0 * * *'
  workflow_dispatch:

jobs:

  prepare:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Generate Matrix
        id: set-matrix
        run: .github/scripts/gen-matrix

  build:
    runs-on: ubuntu-20.04
    needs: prepare
    name: Build (${{matrix.container}}/${{matrix.version}})

    strategy:
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Prepare information
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{matrix.container}}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=${{matrix.version}}
          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV
          echo VERSION=$VERSION >> $GITHUB_ENV

      - name: Verify information
        run: |
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

      - name: Login to github container repository
        if: ${{github.head_ref == ''}} # only for non-PRs
        run: echo "${{ secrets.GHCR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      # As we can't seem to limit the concurrent builds, and the github actions runner gets overloaded
      # with parallel builds, we do sequential builds without pushing. The final build, actually
      # uses the build cache and only tags and pushes the images.

      - name: Build (linux/arm64)
        if: ${{!matrix.skip.aarch64}}
        run: |
          docker buildx build . -f containers/${{matrix.container}}/${{matrix.version}}/Dockerfile --platform linux/arm64 --tag $IMAGE_ID:$VERSION

      - name: Build (linux/amd64)
        run: |
          docker buildx build . -f containers/${{matrix.container}}/${{matrix.version}}/Dockerfile --platform linux/amd64 --tag $IMAGE_ID:$VERSION

      - name: Tag and Push
        if: ${{github.head_ref == ''}} # only for non-PRs
        run: |
          docker buildx build . -f containers/${{matrix.container}}/${{matrix.version}}/Dockerfile --push --platform linux/amd64,linux/arm64 --tag $IMAGE_ID:$VERSION
